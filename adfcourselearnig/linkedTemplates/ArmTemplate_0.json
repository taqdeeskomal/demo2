{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfcourselearnig"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureSqlDatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfdlstorageacc.dfs.core.windows.net/"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://azadfasakeyvalut.vault.azure.net/"
		},
		"AzureSqlDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "az-adf.database.windows.net"
		},
		"AzureSqlDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adflearning"
		},
		"AzureSqlDatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "az-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/008_ForEachActivity_SetVaribleActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachNumber",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Number",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "y",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Number": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4
						]
					}
				},
				"variables": {
					"y": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/016_filter_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter activity",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('x')",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(),10)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"x": {
						"type": "Array",
						"defaultValue": [
							10,
							20,
							30
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/014_pl_storedprocedure_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_sales_new]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlQuery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SALES2010.csv",
						"folderPath": "Input",
						"fileSystem": "adf-learning-material"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "PRODUCT",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "adf-learning-material"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "invoiceId",
						"type": "String"
					},
					{
						"name": "billingAccountId",
						"type": "String"
					},
					{
						"name": "billingAccountName",
						"type": "String"
					},
					{
						"name": "previousInvoiceId",
						"type": "String"
					},
					{
						"name": "billingProfileId",
						"type": "String"
					},
					{
						"name": "billingProfileName",
						"type": "String"
					},
					{
						"name": "invoiceSectionId",
						"type": "String"
					},
					{
						"name": "invoiceSectionName",
						"type": "String"
					},
					{
						"name": "partnerTenantId",
						"type": "String"
					},
					{
						"name": "partnerName",
						"type": "String"
					},
					{
						"name": "resellerName",
						"type": "String"
					},
					{
						"name": "resellerMpnId",
						"type": "String"
					},
					{
						"name": "customerTenantId",
						"type": "String"
					},
					{
						"name": "customerName",
						"type": "String"
					},
					{
						"name": "costCenter",
						"type": "String"
					},
					{
						"name": "billingPeriodStartDate",
						"type": "String"
					},
					{
						"name": "billingPeriodEndDate",
						"type": "String"
					},
					{
						"name": "servicePeriodStartDate",
						"type": "String"
					},
					{
						"name": "servicePeriodEndDate",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "serviceFamily",
						"type": "String"
					},
					{
						"name": "productOrderId",
						"type": "String"
					},
					{
						"name": "productOrderName",
						"type": "String"
					},
					{
						"name": "consumedService",
						"type": "String"
					},
					{
						"name": "meterId",
						"type": "String"
					},
					{
						"name": "meterName",
						"type": "String"
					},
					{
						"name": "meterCategory",
						"type": "String"
					},
					{
						"name": "meterSubCategory",
						"type": "String"
					},
					{
						"name": "meterRegion",
						"type": "String"
					},
					{
						"name": "productId",
						"type": "String"
					},
					{
						"name": "product",
						"type": "String"
					},
					{
						"name": "subscriptionId",
						"type": "String"
					},
					{
						"name": "subscriptionName",
						"type": "String"
					},
					{
						"name": "publisherType",
						"type": "String"
					},
					{
						"name": "publisherId",
						"type": "String"
					},
					{
						"name": "publisherName",
						"type": "String"
					},
					{
						"name": "resourceGroupName",
						"type": "String"
					},
					{
						"name": "resourceId",
						"type": "String"
					},
					{
						"name": "resourceLocation",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "effectivePrice",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "unitOfMeasure",
						"type": "String"
					},
					{
						"name": "chargeType",
						"type": "String"
					},
					{
						"name": "billingCurrency",
						"type": "String"
					},
					{
						"name": "pricingCurrency",
						"type": "String"
					},
					{
						"name": "costInBillingCurrency",
						"type": "String"
					},
					{
						"name": "costInPricingCurrency",
						"type": "String"
					},
					{
						"name": "costInUsd",
						"type": "String"
					},
					{
						"name": "paygCostInBillingCurrency",
						"type": "String"
					},
					{
						"name": "paygCostInUsd",
						"type": "String"
					},
					{
						"name": "exchangeRatePricingToBilling",
						"type": "String"
					},
					{
						"name": "exchangeRateDate",
						"type": "String"
					},
					{
						"name": "isAzureCreditEligible",
						"type": "String"
					},
					{
						"name": "serviceInfo1",
						"type": "String"
					},
					{
						"name": "serviceInfo2",
						"type": "String"
					},
					{
						"name": "additionalInfo",
						"type": "String"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "partnerEarnedCreditRate",
						"type": "String"
					},
					{
						"name": "partnerEarnedCreditApplied",
						"type": "String"
					},
					{
						"name": "payGPrice",
						"type": "String"
					},
					{
						"name": "frequency",
						"type": "String"
					},
					{
						"name": "term",
						"type": "String"
					},
					{
						"name": "reservationId",
						"type": "String"
					},
					{
						"name": "reservationName",
						"type": "String"
					},
					{
						"name": "pricingModel",
						"type": "String"
					},
					{
						"name": "unitPrice",
						"type": "String"
					},
					{
						"name": "costAllocationRuleName",
						"type": "String"
					},
					{
						"name": "provider",
						"type": "String"
					},
					{
						"name": "benefitId",
						"type": "String"
					},
					{
						"name": "benefitName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Input",
						"fileSystem": "adf-learning-material"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "PRODUCT",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tablecreatedusingquery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales_new"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/YearWise')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "YearWise",
						"fileSystem": "adf-learning-material"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "PRODUCT",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/createdusingsqlsp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Input",
						"fileSystem": "adf-learning-material"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "PRODUCT",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvfilers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "adf-learning-material"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "invoiceId",
						"type": "String"
					},
					{
						"name": "billingAccountId",
						"type": "String"
					},
					{
						"name": "billingAccountName",
						"type": "String"
					},
					{
						"name": "previousInvoiceId",
						"type": "String"
					},
					{
						"name": "billingProfileId",
						"type": "String"
					},
					{
						"name": "billingProfileName",
						"type": "String"
					},
					{
						"name": "invoiceSectionId",
						"type": "String"
					},
					{
						"name": "invoiceSectionName",
						"type": "String"
					},
					{
						"name": "partnerTenantId",
						"type": "String"
					},
					{
						"name": "partnerName",
						"type": "String"
					},
					{
						"name": "resellerName",
						"type": "String"
					},
					{
						"name": "resellerMpnId",
						"type": "String"
					},
					{
						"name": "customerTenantId",
						"type": "String"
					},
					{
						"name": "customerName",
						"type": "String"
					},
					{
						"name": "costCenter",
						"type": "String"
					},
					{
						"name": "billingPeriodStartDate",
						"type": "String"
					},
					{
						"name": "billingPeriodEndDate",
						"type": "String"
					},
					{
						"name": "servicePeriodStartDate",
						"type": "String"
					},
					{
						"name": "servicePeriodEndDate",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "serviceFamily",
						"type": "String"
					},
					{
						"name": "productOrderId",
						"type": "String"
					},
					{
						"name": "productOrderName",
						"type": "String"
					},
					{
						"name": "consumedService",
						"type": "String"
					},
					{
						"name": "meterId",
						"type": "String"
					},
					{
						"name": "meterName",
						"type": "String"
					},
					{
						"name": "meterCategory",
						"type": "String"
					},
					{
						"name": "meterSubCategory",
						"type": "String"
					},
					{
						"name": "meterRegion",
						"type": "String"
					},
					{
						"name": "productId",
						"type": "String"
					},
					{
						"name": "product",
						"type": "String"
					},
					{
						"name": "subscriptionId",
						"type": "String"
					},
					{
						"name": "subscriptionName",
						"type": "String"
					},
					{
						"name": "publisherType",
						"type": "String"
					},
					{
						"name": "publisherId",
						"type": "String"
					},
					{
						"name": "publisherName",
						"type": "String"
					},
					{
						"name": "resourceGroupName",
						"type": "String"
					},
					{
						"name": "resourceId",
						"type": "String"
					},
					{
						"name": "resourceLocation",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "effectivePrice",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "unitOfMeasure",
						"type": "String"
					},
					{
						"name": "chargeType",
						"type": "String"
					},
					{
						"name": "billingCurrency",
						"type": "String"
					},
					{
						"name": "pricingCurrency",
						"type": "String"
					},
					{
						"name": "costInBillingCurrency",
						"type": "String"
					},
					{
						"name": "costInPricingCurrency",
						"type": "String"
					},
					{
						"name": "costInUsd",
						"type": "String"
					},
					{
						"name": "paygCostInBillingCurrency",
						"type": "String"
					},
					{
						"name": "paygCostInUsd",
						"type": "String"
					},
					{
						"name": "exchangeRatePricingToBilling",
						"type": "String"
					},
					{
						"name": "exchangeRateDate",
						"type": "String"
					},
					{
						"name": "isAzureCreditEligible",
						"type": "String"
					},
					{
						"name": "serviceInfo1",
						"type": "String"
					},
					{
						"name": "serviceInfo2",
						"type": "String"
					},
					{
						"name": "additionalInfo",
						"type": "String"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "partnerEarnedCreditRate",
						"type": "String"
					},
					{
						"name": "partnerEarnedCreditApplied",
						"type": "String"
					},
					{
						"name": "payGPrice",
						"type": "String"
					},
					{
						"name": "frequency",
						"type": "String"
					},
					{
						"name": "term",
						"type": "String"
					},
					{
						"name": "reservationId",
						"type": "String"
					},
					{
						"name": "reservationName",
						"type": "String"
					},
					{
						"name": "pricingModel",
						"type": "String"
					},
					{
						"name": "unitPrice",
						"type": "String"
					},
					{
						"name": "costAllocationRuleName",
						"type": "String"
					},
					{
						"name": "provider",
						"type": "String"
					},
					{
						"name": "benefitId",
						"type": "String"
					},
					{
						"name": "benefitName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		}
	]
}